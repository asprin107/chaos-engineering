apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: prometheus
  namespace: argocd
  finalizers:
    - resources-finalizer.argocd.argoproj.io
spec:
  destination:
    namespace: monitoring
    server: {{ .Values.spec.destination.server }}
  project: default

  source:
    path: helm/charts/prometheus
    repoURL: https://github.com/asprin107/chaos-engineering.git
    targetRevision: feature/eks
    helm:
      parameters:
        - name: server.service.servicePort
          value: "83"
        - name: prometheus-node-exporter.enabled
          value: "false"
{{/*        - name: server.service.type*/}}
{{/*          value: NodePort*/}}
{{/*        - name: server.service.nodePort*/}}
{{/*          value: "30083"*/}}
        - name: server.extraFlags[0]
          value: "web.enable-lifecycle"
        - name: server.extraFlags[1]
          value: "enable-feature=remote-write-receiver"
        - name: server.extraFlags[2]
          value: "enable-feature=native-histograms"
        - name: server.extraFlags[3]
          value: "web.enable-remote-write-receiver"
        - name: server.statefulSet.enabled
          value: "true"
        - name: server.persistentVolume.storageClass
          value: {{ .Values.prometheus.server.persistentVolume.storageClass }}
        - name: server.persistentVolume.volumeName
          value: {{ .Values.prometheus.server.persistentVolume.volumeName }}
        - name: alertmanager.enabled
          value: "false"
        - name: serviceAccounts.server.annotations.eks\.amazonaws\.com/role-arn
          value: {{ .Values.prometheus.server.serviceAccounts.roleArn }}
        - name: server.persistentVolume.size
          value: {{ .Values.prometheus.server.persistentVolume.size }}
        - name: server.persistentVolume.accessModes[0]
          value: ReadWriteMany
        - name: configmapReload.prometheus.resources.limits.cpu
          value: {{ .Values.prometheus.resources.limits.cpu }}
        - name: configmapReload.prometheus.resources.limits.memory
          value: {{ .Values.prometheus.resources.limits.memory }}
        - name: configmapReload.prometheus.resources.requests.cpu
          value: {{ .Values.prometheus.resources.requests.cpu }}
        - name: configmapReload.prometheus.resources.requests.memory
          value: {{ .Values.prometheus.resources.requests.memory }}
{{/*        - name: server.tcpSocketProbeEnabled*/}}
{{/*          value: "true"*/}}